apiVersion: v1
kind: Namespace
metadata:
  name: spire

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-server
  namespace: spire

---

apiVersion: v1
kind: Secret
metadata:
  name: spire-server
  namespace: spire
type: Opaque
data:
  bootstrap.key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1JR2tBZ0VCQkRBZzJMYnVsWHpRWDFORisyRGkwUkt6TVdmRUdpb0JoaC9mRnB4N3lPRXFrYS8vVHBhZVUzTzUKUUpSWlhkV0hLdWFnQndZRks0RUVBQ0toWkFOaUFBUmFNSDZkSVpMRWhpTE9kdnpqRzdsWVlObVB6U2N2dGJWegpmTi9qeGFITFNacnRqdVlJRXJOOUNTdUFPQzRqaVBSbjdUKzBNZit2eUMwNjBzdXNpbTR6QlllaDdpOXRVRVcxCjdXK1BwZTNwWjRUeVZmQndLOHV6K1p5YTgrcFVyMk09Ci0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0K

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-server
  namespace: spire
data:
  server.conf: |
    server {
      bind_address = "0.0.0.0"
      bind_port = "8081"
      trust_domain = "example.org"
      data_dir = "/run/spire/data"
      log_level = "DEBUG"
      svid_ttl = "1h"
      ca_subject = {
        Country = ["US"],
        Organization = ["SPIFFE"],
        CommonName = "",
      }
    }

    plugins {
      DataStore "sql" {
        plugin_data {
          database_type = "sqlite3"
          connection_string = "/run/spire/data/datastore.sqlite3"
        }
      }

      NodeAttestor "k8s_psat" {
        plugin_data {
          clusters = {
            "demo-cluster" = {
              service_account_key_file = "/run/k8s-certs/apiserver.crt"
              service_account_whitelist = ["spire:spire-agent"]
              enable_api_server_queries = true
            }
          }
        }
      }

      NodeResolver "noop" {
        plugin_data {}
      }

      KeyManager "disk" {
        plugin_data {
          keys_path = "/run/spire/data/keys.json"
        }
      }

      UpstreamCA "disk" {
        plugin_data {
          ttl = "12h"
          key_file_path = "/run/spire/secrets/bootstrap.key"
          cert_file_path = "/run/spire/config/bootstrap.crt"
        }
      }
    }
  bootstrap.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBzDCCAVOgAwIBAgIJAJM4DhRH0vmuMAoGCCqGSM49BAMEMB4xCzAJBgNVBAYT
    AlVTMQ8wDQYDVQQKDAZTUElGRkUwHhcNMTgwNTEzMTkzMzQ3WhcNMjMwNTEyMTkz
    MzQ3WjAeMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGU1BJRkZFMHYwEAYHKoZIzj0C
    AQYFK4EEACIDYgAEWjB+nSGSxIYiznb84xu5WGDZj80nL7W1c3zf48Why0ma7Y7m
    CBKzfQkrgDguI4j0Z+0/tDH/r8gtOtLLrIpuMwWHoe4vbVBFte1vj6Xt6WeE8lXw
    cCvLs/mcmvPqVK9jo10wWzAdBgNVHQ4EFgQUh6XzV6LwNazA+GTEVOdu07o5yOgw
    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwGQYDVR0RBBIwEIYOc3Bp
    ZmZlOi8vbG9jYWwwCgYIKoZIzj0EAwQDZwAwZAIwE4Me13qMC9i6Fkx0h26y09QZ
    IbuRqA9puLg9AeeAAyo5tBzRl1YL0KNEp02VKSYJAjBdeJvqjJ9wW55OGj1JQwDF
    D7kWeEB6oMlwPbI/5hEY3azJi16I0uN1JSYTSWGSqWc=
    -----END CERTIFICATE-----
  server.cert: |
    -----BEGIN CERTIFICATE-----
    MIID4TCCAsmgAwIBAgIMFYTWcBW+Pk7zmz/2MA0GCSqGSIb3DQEBCwUAMBUxEzAR
    BgNVBAMTCmt1YmVybmV0ZXMwHhcNMTkwMjE3MTgxMjI4WhcNMjkwMjE2MTgxMjI4
    WjAcMRowGAYDVQQDExFrdWJlcm5ldGVzLW1hc3RlcjCCASIwDQYJKoZIhvcNAQEB
    BQADggEPADCCAQoCggEBAMC1rvgaoVmmgAdVov7IoiWP5iyA3es0zfF/YWFFWGKB
    89PMGs7pxWNjd8aYkas15bRwv6gMPOK4Yh7nrmetB2cQDhtvzmRf9/XKJCRx6rh3
    3JtaThcpu82nCxQr34DMzJzjfD51DA2cqx0Hq181tmoNTsMKcALn9qUHKIfZOWk0
    Noi2PJ3ZMsoPbvWKb/TaXp4Z2e6ocpacwop8KiURTAauin7uNg4DaL53vkRGejAw
    gHINw9aPqPVxqxoS9PQu7SeVFcLRi1kC+9G1mfA51PMUZBSSBUGHBowAzYG9J6xA
    lVYIa0HHqMab3O6NGGtsh9/fXD5HUUEhL7xnKl5MB5UCAwEAAaOCASgwggEkMA4G
    A1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAA
    MIHuBgNVHREEgeYwgeOCQmFwaS1zY290dGUtazhzLWxvY2FsLWlxbzRwci0xODc3
    MDgyODg1LnVzLWVhc3QtMi5lbGIuYW1hem9uYXdzLmNvbYIdYXBpLmludGVybmFs
    LnNjb3R0ZS5rOHMubG9jYWyCFGFwaS5zY290dGUuazhzLmxvY2FsggprdWJlcm5l
    dGVzghJrdWJlcm5ldGVzLmRlZmF1bHSCFmt1YmVybmV0ZXMuZGVmYXVsdC5zdmOC
    JGt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbIcEZEAAAYcEfwAA
    ATANBgkqhkiG9w0BAQsFAAOCAQEAmeMiUQcfWnZm7mv8k+45ZZAz/P9fve62Js1X
    8VX+ijJbXdC+66+qkLNB+pg/4Bp1GroN6OtrdJlfOLPQ3U5ZhRGC4zuLzyj8DKit
    nYA7Eh9DaHrJ5Ml7vs7GQv1W/SeMfuj60O3QjIkXX8ISGnUg3+EVXrNA4p1WpoSC
    T63KnDKNJN6FfraNzBt9ad5mo+NeXTVMQzS+wwKrcCo8BjA5vjFie8ecneFMYaZo
    7+JoiwECAQphGQQEeROosJmubzHPvLDzTserosvRr/AZIik2N9dWaeiKlixC4Svk
    i9UGYC4OT2grCS4xvatDWZ5wOsC0Fd0Dhb1zu6nR+1tjiwc8vA==
    -----END CERTIFICATE-----

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-server
  namespace: spire
  labels:
    app: spire-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spire-server
  serviceName: spire-server
  template:
    metadata:
      namespace: spire
      labels:
        app: spire-server
    spec:
      serviceAccountName: spire-server
      containers:
        - name: spire-server
          image: gcr.io/spiffe-io/spire-server:0.7.4
          args: ["-config", "/run/spire/config/server.conf"]
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-secrets
              mountPath: /run/spire/secrets
              readOnly: true
            - name: spire-data
              mountPath: /run/spire/data
              readOnly: false
            - name: k8s-sa-cert
              mountPath: /run/k8s-certs/apiserver.crt
              readOnly: true
          livenessProbe:
            tcpSocket:
              port: 8081
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
      volumes:
        - name: spire-config
          configMap:
            name: spire-server
        - name: spire-secrets
          secret:
              secretName: spire-server
        - name: k8s-sa-cert
          hostPath:
            path: /var/lib/minikube/certs/apiserver.crt
            type: File
  volumeClaimTemplates:
    - metadata:
        name: spire-data
        namespace: spire
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: spire-server
  namespace: spire
spec:
  type: NodePort
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
  selector:
    app: spire-server
