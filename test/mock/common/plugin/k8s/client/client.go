// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spiffe/spire/pkg/common/plugin/k8s/client (interfaces: K8SClient)

// Package mock_k8s_client is a generated GoMock package.
package mock_k8s_client

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockK8SClient is a mock of K8SClient interface
type MockK8SClient struct {
	ctrl     *gomock.Controller
	recorder *MockK8SClientMockRecorder
}

// MockK8SClientMockRecorder is the mock recorder for MockK8SClient
type MockK8SClientMockRecorder struct {
	mock *MockK8SClient
}

// NewMockK8SClient creates a new mock instance
func NewMockK8SClient(ctrl *gomock.Controller) *MockK8SClient {
	mock := &MockK8SClient{ctrl: ctrl}
	mock.recorder = &MockK8SClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockK8SClient) EXPECT() *MockK8SClientMockRecorder {
	return m.recorder
}

// GetNode mocks base method
func (m *MockK8SClient) GetNode(arg0, arg1 string) (string, error) {
	ret := m.ctrl.Call(m, "GetNode", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNode indicates an expected call of GetNode
func (mr *MockK8SClientMockRecorder) GetNode(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNode", reflect.TypeOf((*MockK8SClient)(nil).GetNode), arg0, arg1)
}
