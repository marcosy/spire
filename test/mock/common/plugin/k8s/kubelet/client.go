// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spiffe/spire/pkg/common/plugin/k8s/kubelet (interfaces: Client)

// Package mock_kubelet_client is a generated GoMock package.
package mock_kubelet_client

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	http "net/http"
	url "net/url"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetPodList mocks base method
func (m *MockClient) GetPodList() (*v1.PodList, error) {
	ret := m.ctrl.Call(m, "GetPodList")
	ret0, _ := ret[0].(*v1.PodList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPodList indicates an expected call of GetPodList
func (mr *MockClientMockRecorder) GetPodList() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodList", reflect.TypeOf((*MockClient)(nil).GetPodList))
}

// GetToken mocks base method
func (m *MockClient) GetToken() string {
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetToken indicates an expected call of GetToken
func (mr *MockClientMockRecorder) GetToken() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockClient)(nil).GetToken))
}

// GetTransport mocks base method
func (m *MockClient) GetTransport() *http.Transport {
	ret := m.ctrl.Call(m, "GetTransport")
	ret0, _ := ret[0].(*http.Transport)
	return ret0
}

// GetTransport indicates an expected call of GetTransport
func (mr *MockClientMockRecorder) GetTransport() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransport", reflect.TypeOf((*MockClient)(nil).GetTransport))
}

// GetURL mocks base method
func (m *MockClient) GetURL() url.URL {
	ret := m.ctrl.Call(m, "GetURL")
	ret0, _ := ret[0].(url.URL)
	return ret0
}

// GetURL indicates an expected call of GetURL
func (mr *MockClientMockRecorder) GetURL() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockClient)(nil).GetURL))
}
